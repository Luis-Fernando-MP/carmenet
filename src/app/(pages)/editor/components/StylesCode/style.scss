/* stylelint-disable selector-class-pattern */
@use '@sass/config/vars' as v;
@use '@sass/utils/defs' as d;
@use '@sass/utils/text' as t;

.stylesCode {
  position: relative;
  background-color: rgb(v.$bg2);
  border-radius: v.$radius;

  &-logo {
    width: 100%;
    font-size: inherit;
    text-align: center;

    @include d.flex($gap: 5px, $ali: center);

    h1 {
      @include t.gradient;

      font-size: v.$fH1;
      text-shadow: 2px 2px 45px white;
    }

    h4 {
      font-size: v.$fH4;
    }
  }

  &-me {
    position: absolute;
    bottom: v.$padding;
    left: v.$padding;
  }

  &-subtitle {
    margin-left: 10px;
    color: rgba(v.$fn1, 0.8);
  }

  &-section {
    @include d.flex($gap: v.$padding);

    padding: v.$padding 0;
    border-bottom: 1px solid rgba(v.$fn2, 0.3);
  }

  &-borders {
    flex-wrap: wrap;
    justify-content: space-evenly;

    width: 100%;
    padding: v.$padding;

    background-color: rgb(v.$bg1);
    border-radius: v.$radius;

    @include d.flex($dir: row, $ali: center, $gap: 5px);
  }

  &-border {
    cursor: pointer;

    justify-content: space-between;

    @include d.flex($gap: 0, $ali: center);

    width: 70px;
    height: 90px;
    padding: 5px;

    border-radius: v.$radius;

    transition: all 0.3s ease-in-out;

    &__cube {
      position: relative;

      width: 50px;
      height: 50px;

      background-color: rgba(v.$fn1, 0.5);
      border-radius: 5px;

      span {
        position: absolute;
        top: 0;
        right: 0;
        transform: rotateZ(20deg);

        display: block;

        width: 30px;
        height: 35px;

        background-color: rgb(v.$fn1);
        box-shadow: 10px 3px 7px 2px rgb(v.$bg1);

        transition: all 0.3s ease-in-out;
      }
    }

    &:hover {
      scale: 0.92;
      background-color: rgba(v.$fn2, 0.3);
    }

    &:hover &__cube span {
      transform: rotateZ(30deg) scale(1.4);
    }
  }
}
